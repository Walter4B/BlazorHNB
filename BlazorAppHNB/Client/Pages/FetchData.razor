@page "/fetchdata"
@attribute [Authorize]
@using BlazorAppHNB.Client.Authentication;
@using BlazorAppHNB.Shared
@using System.Net.Http.Headers;
@using System.Net.Http.Json;
@using Newtonsoft.Json;
@using System.Text.Json;
@using System.Text.Json.Serialization
@using static System.Net.WebRequestMethods;
@using BlazorAppHNB.Client.Services;
@inject HttpClient http
@inject DataService dataService
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navManager

<PageTitle>Currency List</PageTitle>


@if (currency == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Broj tečajnice</th>
                <th>Datum primjene</th>
                <th>Država</th>
                <th>Država_ISO</th>
                <th>Šifra valute</th>
                <th>Valuta</th>
                <th>Kupovni tečaj</th>
                <th>Srednji tečaj</th>
                <th>Prodajni tečaj</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cur in currency)
            {
                <tr>
                    <td>@cur.broj_tecajnice</td>
                    <td>@cur.datum_primjene.ToShortDateString()</td>
                    <td>@cur.drzava</td>
                    <td>@cur.drzava_iso</td>
                    <td>@cur.sifra_valute</td>
                    <td>@cur.valuta</td>
                    <td>@cur.kupovni_tecaj</td>
                    <td>@cur.srednji_tecaj</td>
                    <td>@cur.prodajni_tecaj</td>
                </tr>
            }
        </tbody>
    </table>
    <table class="table">
        <thead>
            <tr>
                <th>Amount in Euro</th>
                <th>Amount in PZL</th>
                <th>Amount in USD</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input type="number" @bind="euroAmount" @oninput="OnInput"/></td>
                <td><div class="currencyBox">@plnAmount</div></td>
                <td><p class="currencyBox">@usdAmount</p></td>
            </tr>
        </tbody>
    </table>
}


@code {
    public decimal euroAmount;
    public decimal plnAmount;
    public decimal usdAmount;

    decimal PLNMod = 1.0m;
    decimal USDMod = 1.0m;

    private List<Currency> currency = new List<Currency>();

    protected override async Task OnInitializedAsync()
    { 
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authenticationStateProvider;

        var token = await customAuthStateProvider.GetToken();

        if (!string.IsNullOrWhiteSpace(token))
        {
            http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token);
        }
        else
        {
            navManager.NavigateTo("/login");
        }

        try
        {
            currency = await dataService.FatchData();
            GetMods();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    private void OnInput(ChangeEventArgs e)
    {
        if (e != null && e.Value != null)
        {
            var value = e.Value.ToString();

            if (decimal.TryParse(value, out euroAmount))
            {
                plnAmount = euroAmount * PLNMod;
                usdAmount = euroAmount * USDMod;
            }
            else
            {
                euroAmount = plnAmount = usdAmount = 0;
            }
        }
    }

    private void GetMods()
    {
        foreach (Currency c in currency)
        {
            if (c.valuta == "PLN")
            {
                PLNMod = c.srednji_tecaj;    
            }
            if (c.valuta == "USD")
            {
                USDMod = c.srednji_tecaj;
            }
        }
    }
}

