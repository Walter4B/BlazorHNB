@page "/fetchdata"
@attribute [Authorize]
@using BlazorAppHNB.Client.Authentication;
@using BlazorAppHNB.Shared
@using System.Net.Http.Headers;
@using System.Net.Http.Json;
@using System.Text.Json;
@using static System.Net.WebRequestMethods;
@inject HttpClient http
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navManager

<PageTitle>Currency List</PageTitle>


@if (currency == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Broj tečajnice</th>
                <th>Datum primjene</th>
                <th>Država</th>
                <th>Država_ISO</th>
                <th>Šifra valute</th>
                <th>Valuta</th>
                <th>Kupovni tečaj</th>
                <th>Srednji tečaj</th>
                <th>Prodajni tečaj</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cur in currency)
            {
                <tr>
                    <td>@cur.broj_tecajnice</td>
                    <td>@cur.datum_primjene.ToShortDateString()</td>
                    <td>@cur.drzava</td>
                    <td>@cur.drzava_iso</td>
                    <td>@cur.sifra_valute</td>
                    <td>@cur.valuta</td>
                    <td>@cur.kupovni_tecaj</td>
                    <td>@cur.srednji_tecaj</td>
                    <td>@cur.prodajni_tecaj</td>
                </tr>
            }
        </tbody>
    </table>
    <table class="table">
        <thead>
            <tr>
                <th>Amount in Euro</th>
                <th>Amount in PZL</th>
                <th>Amount in USD</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input type="number" @bind="@TextBoxEuro" @bind:event="oninput"/></td>
                <td><div class="currencyBox">@PZLAmount</div></td>
                <td><p class="currencyBox">@USDAmount</p></td>
            </tr>
        </tbody>
    </table>
}


@code {
    decimal TextBoxEuro;
    decimal? PZLAmount;
    decimal? USDAmount;

    decimal? PZLMod = 1;
    decimal? USDMod = 2;

    private List<Currency>? currency;

    protected override async Task OnInitializedAsync()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authenticationStateProvider;

        var token = await customAuthStateProvider.GetToken();

        if (!string.IsNullOrWhiteSpace(token))
        {
            http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token);
        }
        else
        {
            navManager.NavigateTo("/login");
        }

        var resp = await http.GetAsync("Currency");
        if (resp.IsSuccessStatusCode)
        {
            var data = await resp.Content.ReadAsStreamAsync();
            currency = JsonSerializer.Deserialize<List<Currency>>(data);
        }

    }

    private void OnInput(decimal value)
    {
        TextBoxEuro = value;
        PZLAmount = value * PZLMod;
        USDAmount = value * USDMod;
    }
}

